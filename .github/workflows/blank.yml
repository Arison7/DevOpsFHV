name: Build Spring Boot BootJar

on:
  push:
    branches: [master]

jobs:
  analyze:
    name: Build and analyze
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: zulu
      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
          
      - name: Build, test, and generate coverage
        run: ./gradlew clean test jacocoTestReport --no-daemon

      - name: Run SonarQube analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          ./gradlew sonarqube \
            -Dsonar.host.url=$SONAR_HOST_URL \
            -Dsonar.login=$SONAR_TOKEN \
            -Dsonar.coverage.jacoco.xmlReportPaths=build/reports/jacoco/test/jacocoTestReport.xml

  start:
    runs-on: self-hosted
    needs: analyze
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
      - name: Grant execute permission
        run: chmod +x gradlew
      - name: Build bootJar
        run: ./gradlew bootJar --no-daemon
      - name: Build Docker image
        run: docker build -t fhvdevops:latest -f Dockerfile-build .

  stop:
    runs-on: self-hosted
    needs: start
    steps:
      - run: docker stop fhvdevops || true
      - run: docker rm fhvdevops || true

  cleanup:
    runs-on: self-hosted
    needs: stop
    steps:
      - run: |
          docker run -d \
            --name fhvdevops \
            --restart unless-stopped \
            -p 8080:8080 \
            --network bridge \
            fhvdevops:latest

  test:
    runs-on: self-hosted
    needs: cleanup
    steps:
      - run: |
          echo 'Checking API endpoint...'
          response=$(curl -s -o /dev/null -w "%{http_code}" http://10.0.40.192:8080/test)
          if [ "$response" -eq 200 ]; then
            echo 'API returned success'
          else
            echo "API returned status $response"
            exit 1
          fi

  publish:
    runs-on: self-hosted
    needs: test
    if: success()
    steps:
      - run: |
          docker tag fhvdevops:latest 10.0.40.193:5000/fhvdevops:team12
          docker push 10.0.40.193:5000/fhvdevops:team12
