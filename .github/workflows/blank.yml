name: Build Spring Boot BootJar (Containerized)

on:
  push:
    branches: [master]

jobs:
  setup:
    name: Build and analyze
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4

      - name: Reset workspace permissions
        run: sudo chown -R $USER:$USER ${{ github.workspace }} || true

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Clean project (Gradle container)
        run: |
          docker run --rm \
            -u $(id -u):$(id -g) \
            -v "${{ github.workspace }}":/home/gradle/project \
            -v ~/.gradle/caches:/home/gradle/.gradle/caches \
            -w /home/gradle/project \
            gradle:jdk17 \
            ./gradlew clean --no-daemon


  build:
    runs-on: self-hosted
    needs: setup
    steps:
      - uses: actions/checkout@v4

      - name: Build bootJar (Gradle container)
        run: |
          docker run --rm \
            -u $(id -u):$(id -g) \
            -v "${{ github.workspace }}":/home/gradle/project \
            -v ~/.gradle/caches:/home/gradle/.gradle/caches \
            -w /home/gradle/project \
            gradle:jdk17 \
            ./gradlew bootJar --no-daemon

      - name: Build Docker image
        run: docker build -t fhvdevopsteam12:latest -f Dockerfile-build .

  stop:
    runs-on: self-hosted
    needs: build
    steps:
      - run: docker stop fhvdevopsteam12 || true
      - run: docker rm fhvdevopsteam12 || true

  start:
    runs-on: self-hosted
    needs: stop
    steps:
      - run: |
          docker run -d \
            --name fhvdevopsteam12 \
            --restart unless-stopped \
            -p 8080:8080 \
            --network bridge \
            fhvdevopsteam12:latest

  sonar:
      runs-on: self-hosted
      needs: start
      name: Run SonarQube analysis
      steps:
        - uses: actions/checkout@v4
        - name: Run tests (with coverage)
          run: |
            docker run --rm \
              -u $(id -u):$(id -g) \
              -v "${{ github.workspace }}":/home/gradle/project \
              -v ~/.gradle/caches:/home/gradle/.gradle/caches \
              -w /home/gradle/project \
              gradle:jdk17 \
              ./gradlew clean test jacocoTestReport --no-daemon

        - name: Run SonarQube analysis (Sonar Scanner container)
          env:
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          run: |
            docker run --rm \
            -e SONAR_HOST_URL="${SONAR_HOST_URL}" \
            -e SONAR_TOKEN="${SONAR_TOKEN}" \
            -v "${{ github.workspace }}":/usr/src \
            sonarsource/sonar-scanner-cli \
            -Dsonar.projectBaseDir=/usr/src \
            -Dsonar.projectKey=Team12 \
            -Dsonar.projectName=Team12 \
            -Dsonar.sources=src \
            -Dsonar.java.binaries=/usr/src/build/classes \
            -Dsonar.coverage.jacoco.xmlReportPaths=build/reports/jacoco/test/jacocoTestReport.xml \
            -Dsonar.exclusions=**/.gradle/**,**/build/**

        - name: Run Documentation
          run: |
            docker run --rm \
            -u $(id -u):$(id -g) -v ${{ github.workspace }}:/docs squidfunk/mkdocs-material build
        - name: Convert to pdf 
          run: |
            docker run --rm \
            --volume "$(pwd)/docs:/data" \
            --volume "$(pwd)/site:/site" \
            -w /data \
            --user $(id -u):$(id -g) \
            pandoc/latex README.md --pdf-engine=xelatex -o /site/docs.pdf

  serve-nginx:
    runs-on: self-hosted
    needs: sonar
    name: Serve static site with NGINX
    steps:

      - name: Build NGINX Docker image
        run: |
          docker build -t docs-site-team12 -f Dockerfile-nginx .
          docker tag docs-site-team12 10.0.40.193:5000/docs-site-team12:team12

      - name: Stop existing NGINX container if running
        run: |
          docker stop docs-site-team12 || true
          docker rm docs-site-team12 || true

      - name: Run NGINX container
        run: |
          docker run -d \
            --name docs-site-team12 \
            -p 80:80 \
            docs-site-team12

      - name: Push to registry
        run: docker push 10.0.40.193:5000/docs-site-team12:team12

  test:
    runs-on: self-hosted
    needs: serve-nginx
    steps:
      - run: |
          echo 'Checking API endpoint...'
          response=$(curl -s -o /dev/null -w "%{http_code}" http://10.0.40.192:8080/test)
          if [ "$response" -eq 200 ]; then
            echo 'API returned success'
          else
            echo "API returned status $response"
            exit 1
          fi

  publish:
    runs-on: self-hosted
    needs: test
    if: success()
    steps:
      - run: |
          docker tag fhvdevopsteam12:latest 10.0.40.193:5000/fhvdevopsteam12:team12
          docker push 10.0.40.193:5000/fhvdevopsteam12:team12

  deploy:
    name: Deploy to Production via SSH
    runs-on: self-hosted
    needs: publish
    steps:
      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.TEAM12_KEY }}" > ~/.ssh/team12_key.pem
          chmod 600 ~/.ssh/team12_key.pem

      - name: Add production server to known_hosts
        run: ssh-keyscan -H 10.0.40.194 >> ~/.ssh/known_hosts

      - name: Deploy on production server
        run: |
          ssh -i ~/.ssh/team12_key.pem -o UserKnownHostsFile=~/.ssh/known_hosts svcgithub@10.0.40.194 << 'EOF'
            docker stop fhvdevopsteam12 || true
            docker rm fhvdevopsteam12 || true
            docker stop docs-site-team12 || true
            docker rm docs-site-team12 || true

            docker rmi 10.0.40.193:5000/fhvdevopsteam12:team12 || true
            docker rmi 10.0.40.193:5000/docs-site-team12:team12

            docker pull 10.0.40.193:5000/fhvdevopsteam12:team12
            docker pull 10.0.40.193:5000/docs-site-team12:team12

            docker run -d \
              --name fhvdevopsteam12 \
              --restart unless-stopped \
              -p 1921:8080 \
              10.0.40.193:5000/fhvdevopsteam12:team12

            echo "Starting documentation container..."
            docker run -d \
              --name docs-site-team12 \
              --restart unless-stopped \
              -p 1922:80 \
              10.0.40.193:5000/docs-site-team12:team12
          EOF
